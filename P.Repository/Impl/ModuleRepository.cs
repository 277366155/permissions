//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//	   如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类进行实现。
// </auto-generated>
//
// <copyright file="ModuleRepository.generated.cs">
//		Copyright(c)2013 WUYICN.All rights reserved.
//		CLR版本：4.5.1
//		开发组织：WUYI@中国
//		公司网站：http://www.gzuwuyi.cn
//		所属工程：WUYI.RMS.Domain.Data
//		生成时间：2016-03-01 16:09
// </copyright>
//------------------------------------------------------------------------------

using P.Model;
using P.Model.ViewModel;
using P.PContext;
using P.PContext.Interface;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;



namespace P.Repository.Interface.Impl
{
	/// <summary>
    ///   仓储操作层实现——模块
    /// </summary>
    public partial class ModuleRepository : RepositoryBase<Module, Int32>, IModuleRepository
    { 
        public ModuleRepository(IUnitOfWork unitOfWork)
            : base()
        { }

        public IList<ModuleVM> GetListModuleVM(Expression<Func<Module, bool>> wh, int limit, int offset, out int total)
        {
            var q = from m1 in Context.Modules.Where(wh)
                    join m2 in Context.Modules on m1.ParentId equals m2.Id into joinModule
                    from item in joinModule.DefaultIfEmpty()
                    select new ModuleVM
                    {
                        Id = m1.Id,
                        Name = m1.Name,
                        LinkUrl = m1.LinkUrl,
                        IsMenu = m1.IsMenu,
                        Code = m1.Code,
                        Description = m1.Description,
                        Enabled = m1.Enabled,
                        ParentName = item.Name,
                        UpdateDate = m1.CreateTime
                    };
            total = q.Count();
            if (offset >= 0)
            {
                return q.OrderBy(c => c.Code).Skip(offset).Take(limit).ToList();
            }
            return q.ToList();
        }
    }
}
